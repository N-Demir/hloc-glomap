[project]
description = "Add a short description here"
name = "lightglue-glomap"
requires-python = ">= 3.11"
version = "0.1.0"
dependencies = ["mmcv-lite"]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["lightglue_glomap*"]

[tool.pixi.project]
channels = ["nvidia", "nvidia/label/cuda-11.8.0", "conda-forge", "pytorch"]
platforms = ["linux-64"]

[tool.pixi.system-requirements]
libc = { family = "glibc", version = "2.31" }
cuda = "11.8"

[tool.pixi.pypi-dependencies]
lightglue-glomap = { path = ".", editable = true }

[tool.pixi.dependencies]
python = "3.11.*"
pytorch = { version = "2.3.1", channel = "pytorch" }
torchvision = { version = "0.18.1", channel = "pytorch" }
cuda = { version = "*", channel = "nvidia/label/cuda-11.8.0" }
cuda-nvcc = { version = "*", channel = "nvidia/label/cuda-11.8.0" }
pytorch-cuda = { version = "11.8.*", channel = "pytorch" }
colmap = { version = ">=3.10,<4", build = "gpu*" }
cudatoolkit = { version = "11.8.*", channel = "conda-forge" }
glomap = ">=1.0.0,<2"
icecream = ">=2.1.3,<3"
rich = ">=13.8.1,<14"
appdirs = ">=1.4.4,<2"
tyro = ">=0.8.10,<0.9"
gradio = ">=4.44.0,<5"
pip = ">=24.2,<25"
numpy = "<2"
rerun-sdk = ">=0.20.0,<0.21"
jaxtyping = ">=0.2.34,<0.3"

[tool.pixi.tasks]
_make-third_party-dir = { cmd = "ls third_party || mkdir third_party" }
_clone-hloc = { cmd = "ls Hierarchical-Localization || git clone --recursive https://github.com/cvg/Hierarchical-Localization/", cwd = "third_party", depends_on = [
    "_make-third_party-dir",
] }
_hloc-install = { cmd = "python -m pip install -e .", cwd = "third_party/Hierarchical-Localization", depends_on = [
    "_clone-hloc",
], outputs = [
    "third_party/Hierarchical-Localization/hloc.egg-info/PKG-INFO",
] }
_download_vocab_tree = "ls vocab_tree_flickr100K_words32K.bin || wget https://demuc.de/colmap/vocab_tree_flickr100K_words32K.bin"
post-install = { cmd = "pwd", depends_on = [
    "_hloc-install",
    "_download_vocab_tree",
] }
app = { cmd = "python tools/app.py", description = "Run the gradio app", depends_on = [
    "post-install",
] }

[tool.pixi.tasks.reconstruct]
cmd = """
    time python tools/reconstruct.py
    """
description = "Reconstruct the scene using LightGlue and Glomap."
depends_on = ["post-install"]

[tool.pixi.feature.nerfstudio.system-requirements]
libc = { family = "glibc", version = "2.31" }
cuda = "11.8"


[tool.pixi.feature.nerfstudio.tasks.video-processing]
cmd = """
    time ns-process-data video --num-downscales 0 --skip-colmap
    """
description = "Perform video processing on the dataset."

[tool.pixi.feature.nerfstudio.tasks.train-splat]
cmd = """
    ns-train splatfacto --output-dir $DATA_DIR/outputs --max-num-iterations 30000 --data $DATA_DIR
    """
description = "Train Splatfacto"

[tool.pixi.feature.nerfstudio.dependencies]
python = "3.11.*"
pytorch = { version = "2.3.1", channel = "pytorch" }
torchvision = { version = "0.18.1", channel = "pytorch" }
cuda = { version = "*", channel = "nvidia/label/cuda-11.8.0" }
cuda-nvcc = { version = "*", channel = "nvidia/label/cuda-11.8.0" }
pytorch-cuda = { version = "11.8.*", channel = "pytorch" }
numpy = "<2"

[tool.pixi.feature.nerfstudio.pypi-dependencies]
open3d = ">=0.18.0,<0.19"
# last version of nerfstudio with gsplat<1.0.0
nerfstudio = { git = "https://github.com/nerfstudio-project/nerfstudio.git", rev = "959fda2e2526b0d2b6c2372cb5bd388bb3b7e7bf" }


[tool.pixi.environments]
# Create a custom environment which only has the `lint` feature (numpy isn't part of that env).
nerfstudio = { features = ["nerfstudio"], no-default-feature = true }
