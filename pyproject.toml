[project]
description = "Add a short description here"
name = "hloc-glomap"
requires-python = ">= 3.11"
version = "0.1.0"
dependencies = ["mmcv-lite"]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["hloc_glomap*"]

[tool.pixi.project]
channels = ["nvidia", "nvidia/label/cuda-11.8.0", "conda-forge", "pytorch"]
platforms = ["linux-64"]

[tool.pixi.activation]
scripts = [".pixi.sh"]

[tool.pixi.system-requirements]
libc = { family = "glibc", version = "2.31" }
cuda = "11.8"

[tool.pixi.pypi-dependencies]
rerun-loader-colmap = { git = "https://github.com/pablovela5620/rerun-loader-colmap.git" }
hloc = { git = "https://github.com/pablovela5620/Hierarchical-Localization.git", rev = "75a97e9ec24ae7f50352ed7096616f941e50e185" }
hloc-glomap = { path = ".", editable = true }

[tool.pixi.dependencies]
python = "3.11.*"
pytorch = { version = "2.3.1", channel = "pytorch" }
torchvision = { version = "0.18.1", channel = "pytorch" }
cuda = { version = "*", channel = "nvidia/label/cuda-11.8.0" }
cuda-nvcc = { version = "*", channel = "nvidia/label/cuda-11.8.0" }
pytorch-cuda = { version = "11.8.*", channel = "pytorch" }
cudatoolkit = { version = "11.8.*", channel = "conda-forge" }
icecream = ">=2.1.3,<3"
rich = ">=13.8.1,<14"
appdirs = ">=1.4.4,<2"
tyro = ">=0.9.1,<0.10"
gradio = ">=4.44.0,<5"
pip = ">=24.2,<25"
numpy = "<2"
rerun-sdk = ">=0.20.0,<0.21"
jaxtyping = ">=0.2.34,<0.3"
cmake = ">=3.30.5,<4"
make = ">=4.4.1,<5"
pkg-config = ">=0.29.2,<0.30"
ninja = ">=1.12.1,<2"
libgomp = ">=14.2.0,<15"
eigen = ">=3.4.0,<4"
libblas = ">=3.9.0,<4"
libcblas = ">=3.9.0,<4"
suitesparse = ">=7.8.3,<8"
ceres-solver = ">=2.2.0,<3"
libboost-devel = ">=1.86.0,<2"
glog = ">=0.7.1,<0.8"
cgal-cpp = ">=6.0.1,<7"
freeimage = ">=3.18.0,<4"
sqlite = ">=3.47.0,<4"
gflags = ">=2.2.2,<3"
wget = ">=1.21.4,<2"
unzip = ">=6.0,<7"

[tool.pixi.tasks]
_make-third_party-dir = { cmd = "ls third_party || mkdir third_party" }
_download_vocab_tree = "ls vocab_tree_flickr100K_words32K.bin || wget https://demuc.de/colmap/vocab_tree_flickr100K_words32K.bin"
post-install = { cmd = "glomap -h", depends_on = [
    # "_hloc-install",
    "_download_vocab_tree",
    "_install-glomap",
] }
app = { cmd = "python tools/app.py", description = "Run the gradio app", depends_on = [
    "post-install",
] }

[tool.pixi.tasks._clone-glomap]
cmd = """
test -e "glomap"
|| (
    git clone https://github.com/pablovela5620/glomap.git
   )
"""
cwd = "third_party"
outputs = ["glomap"]
depends_on = ["_make-third_party-dir"]

[tool.pixi.tasks._clean-glomap]
cmd = "rm -rf build"
cwd = "third_party/glomap"
outputs = ["glomap"]

[tool.pixi.tasks._prepare-glomap]
cmd = """
cmake -B build -S . -GNinja \
    -DCMAKE_PREFIX_PATH=$CONDA_PREFIX \
    -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
    -DCMAKE_EXE_LINKER_FLAGS="-L$CONDA_PREFIX/lib"
"""
cwd = "third_party/glomap"
depends_on = ["_clone-glomap", "_make-third_party-dir"]

[tool.pixi.tasks._install-glomap]
cmd = "ninja -C build && ninja -C build install"
depends-on = ["_prepare-glomap"]
cwd = "third_party/glomap"

[tool.pixi.tasks.reconstruct]
cmd = """
    time python tools/reconstruct.py
    """
description = "Reconstruct the scene using LightGlue and Glomap."
depends_on = ["post-install"]

[tool.pixi.feature.nerfstudio.system-requirements]
libc = { family = "glibc", version = "2.31" }
cuda = "11.8"


[tool.pixi.feature.nerfstudio.tasks.video-processing]
cmd = """
    time ns-process-data video --num-downscales 0 --skip-colmap
    """
description = "Perform video processing on the dataset."

[tool.pixi.feature.nerfstudio.tasks.train-splat]
cmd = """
    ns-train splatfacto --output-dir $DATA_DIR/outputs --max-num-iterations 30000 --data $DATA_DIR
    """
description = "Train Splatfacto"

[tool.pixi.feature.nerfstudio.dependencies]
python = "3.11.*"
pytorch = { version = "2.3.1", channel = "pytorch" }
torchvision = { version = "0.18.1", channel = "pytorch" }
cuda = { version = "*", channel = "nvidia/label/cuda-11.8.0" }
cuda-nvcc = { version = "*", channel = "nvidia/label/cuda-11.8.0" }
pytorch-cuda = { version = "11.8.*", channel = "pytorch" }
numpy = "<2"

[tool.pixi.feature.nerfstudio.pypi-dependencies]
open3d = ">=0.18.0,<0.19"
# last version of nerfstudio with gsplat<1.0.0
nerfstudio = { git = "https://github.com/nerfstudio-project/nerfstudio.git", rev = "959fda2e2526b0d2b6c2372cb5bd388bb3b7e7bf" }


[tool.pixi.environments]
# Create a custom environment which only has the `lint` feature (numpy isn't part of that env).
nerfstudio = { features = ["nerfstudio"], no-default-feature = true }
